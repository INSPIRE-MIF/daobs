<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2014-2016 European Environment Agency

    Licensed under the EUPL, Version 1.1 or â€“ as soon
    they will be approved by the European Commission -
    subsequent versions of the EUPL (the "Licence");
    You may not use this work except in compliance
    with the Licence.
    You may obtain a copy of the Licence at:

    https://joinup.ec.europa.eu/community/eupl/og_page/eupl

    Unless required by applicable law or agreed to in
    writing, software distributed under the Licence is
    distributed on an "AS IS" basis,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    either express or implied.
    See the Licence for the specific language governing
    permissions and limitations under the Licence.

-->
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cm="http://camel.apache.org/schema/spring"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring
        http://camel.apache.org/schema/spring/camel-spring.xsd">

  <bean id="bridgePropertyPlaceholder"
        class="org.apache.camel.spring.spi.BridgePropertyPlaceholderConfigurer">
    <property name="location" value="${config.properties.path}"/>
  </bean>

  <bean id="serviceDatasetIndexerPagination"
        class="org.daobs.routing.utility.Pagination">
    <property name="recordsPerPage"
              value="${task.service-dataset-indexer.records.per.page}"/>
  </bean>
  <bean id="utility" class="org.daobs.routing.utility.Utility"/>

  <bean id="xsltUtility" class="org.daobs.routing.utility.Utility"/>

  <bean id="serviceDatasetAnalyzer" class="org.daobs.tasks.ServiceDatasetAnalyzer"/>

  <bean id="duplicateRepo"
        class="org.apache.camel.processor.idempotent.MemoryIdempotentRepository"/>

  <bean id="addAggregatorStrategy"
        class="org.daobs.routing.utility.StringAggregationStrategy">
  </bean>

  <bean id="nullBodyStrategy"
        class="org.daobs.routing.utility.NullBodyStrategy"/>

  <cm:errorHandler id="loggingErrorHandler"
                   type="LoggingErrorHandler"
                   logName="daobs.tasks.service-dataset-indexer"
                   level="DEBUG"/>

  <cm:camelContext
    id="task.service-dataset-indexer"
    errorHandlerRef="loggingErrorHandler"
    allowUseOriginalMessage="true"
    useMDCLogging="true">

    <cm:properties>
      <cm:property key="http.proxyHost" value="${http.proxyHost}"/>
      <cm:property key="http.proxyPort" value="${http.proxyPort}"/>
      <cm:property key="http.nonProxyHosts" value="${http.nonProxyHosts}"/>
    </cm:properties>

    <cm:threadPoolProfile id="myDefaultProfile"
                          defaultProfile="true"
                          poolSize="10"
                          maxPoolSize="10"/>

    <cm:dataFormats>
      <cm:xmljson id="xmljson"/>
      <cm:xmljson id="xmljsonNoNs"
                  forceTopLevelObject="true"
                  trimSpaces="true"
                  rootName="root"
                  skipNamespaces="true"
                  removeNamespacePrefixes="true"/>
    </cm:dataFormats>

    <cm:onException>
      <cm:exception>
        org.apache.camel.component.http4.HttpOperationFailedException
      </cm:exception>
      <cm:continued>
        <cm:constant>true</cm:constant>
      </cm:continued>
      <cm:log message="Oops, something went wrong: $simple{exception.message}."
              loggingLevel="ERROR"
              logName="org.daobs.task.ServiceDatasetIndexer"/>
      <cm:log message="$simple{exception.responseBody}"
              loggingLevel="ERROR"
              logName="org.daobs.task.ServiceDatasetIndexer"/>
      <cm:log message="$simple{exception.stacktrace}"
              loggingLevel="ERROR"
              logName="org.daobs.task.ServiceDatasetIndexer"/>
      <cm:to uri="log:org.daobs.task.ServiceDatasetIndexer?showBody=true"/>
    </cm:onException>



    <cm:route id="route-task-start"
              autoStartup="{{task.service-dataset-indexer.startup.cli}}">
      <cm:description>
        Starting point when running from command line.
        Then trigger the task with options defined in config.properties.
        See mode CLI.
      </cm:description>
      <cm:from uri="timer://start?repeatCount=1"/>
      <cm:setHeader headerName="documentFilter">
        <cm:simple>{{task.service-dataset-indexer.filter}}</cm:simple>
      </cm:setHeader>
      <cm:to uri="direct:task-analyze-start"/>
    </cm:route>



    <cm:route id="route-task-jms-start"
              autoStartup="{{task.service-dataset-indexer.startup.jms}}">
      <cm:description>
        Starting point when a JMS message is received.
        The message contains the filter to process a set of records.
      </cm:description>
      <cm:from uri="activemq:task-analyze"/>
      <cm:setHeader headerName="documentFilter">
        <cm:groovy>'{{task.service-dataset-indexer.filter}}' + ' ' + exchange.in.body.trim()</cm:groovy>
      </cm:setHeader>
      <cm:to uri="direct:task-analyze2-start"/>
    </cm:route>


    <cm:route id="route-task-analyze2">
      <cm:description>
        Query document to analyze and index.
        Loop on all records matching the filter.
        Check for all associated datasets.
      </cm:description>
      <cm:from uri="direct:task-analyze2-start"/>
      <cm:to uri="bean:serviceDatasetAnalyzer?method=linkServiceAndDatasets"/>
    </cm:route>
  </cm:camelContext>
</beans>
