## Default Elasticsearch configuration from elasticsearch-docker.
## from https://github.com/elastic/elasticsearch-docker/blob/master/build/elasticsearch/elasticsearch.yml
#
#cluster.name: "docker-cluster"

transport.host: 0.0.0.0

http.host: 0.0.0.0

network.host: ${es.network.host}

#network.bind_host: 0

# minimum_master_nodes need to be explicitly set when bound on a public IP
# set to 1 to allow single node clusters
# Details: https://github.com/elastic/elasticsearch/pull/17288
discovery.zen.minimum_master_nodes: ${es.discovery.zen.minimum_master_nodes}

## Use single node discovery in order to disable production mode and avoid bootstrap checks
## see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
#
${es.single-node.discovery}


# Readonlytest config
#http.type: ssl_netty4
readonlyrest:
  enable: true

  #ssl:
    #enable: true
    # keystore_file: "/tmp/ssl/self.jks"
    # keystore_pass: KEYSTORE_PASSWORD
    # key_pass: KEY_PASS

  response_if_req_forbidden: Forbidden by ReadonlyREST ES plugin
  #rest.action.multi.allow_explicit_index: false

  access_control_rules:
  #- name: Accept all request from localhost
  #  type: allow
  #  hosts: [127.0.0.1, localhost]
  #  verbosity: info

  - name: Check_mk
    type: allow
    #hosts: [CHECKHEALTH]
    actions: ["cluster:monitor/health"]
    verbosity: error

  - name: public_access
    type: allow
    indices: ["records", "indicators"]
    verbosity: error

  # We trust Kibana's server side process, full access granted via HTTP authentication
  - name: "::KIBANA-SRV::"
    groups: ["kibana_srv"]
    verbosity: error # don't log successful request

  - name: Kibana RW
    groups: ["kibana_rw"]
    kibana_access: rw
    kibana_index: .dashboards
    #indices: [".dashboards"]
    verbosity: error

  - name: Kibana_RO
    groups: ["kibana_ro"]
    type: allow
    kibana_access: ro
    kibana_index: .dashboards
    #indices: [".dashboards"]
    verbosity: error

  - name: Kibana_RO_strict
    groups: ["kibana_ro_strict"]
    type: allow
    kibana_access: ro_strict
    kibana_index: .dashboards
    #indices: [".dashboards"]
    verbosity: error


  users:

  - username: kibana_rw
    auth_key: ${kb.es.rw.username}:${kb.es.rw.password}
    groups: ["kibana_rw"]

  - username: kibana_ro
    auth_key: ${kb.es.ro.username}:${kb.es.ro.password}
    groups: ["kibana_ro"]

  - username: kibana_server
    # auth_key is good for testing, but replace it with `auth_key_sha256`!
    auth_key: ${kb.es.serverusername}:${kb.es.serverpassword}
    groups: ["kibana_srv"]

