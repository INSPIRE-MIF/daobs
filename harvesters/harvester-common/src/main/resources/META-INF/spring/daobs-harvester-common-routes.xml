<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2014-2016 European Environment Agency

    Licensed under the EUPL, Version 1.1 or â€“ as soon
    they will be approved by the European Commission -
    subsequent versions of the EUPL (the "Licence");
    You may not use this work except in compliance
    with the Licence.
    You may obtain a copy of the Licence at:

    https://joinup.ec.europa.eu/community/eupl/og_page/eupl

    Unless required by applicable law or agreed to in
    writing, software distributed under the Licence is
    distributed on an "AS IS" basis,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    either express or implied.
    See the Licence for the specific language governing
    permissions and limitations under the Licence.

-->
<!-- Configures the cm Context-->

<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cm="http://camel.apache.org/schema/spring"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring
        http://camel.apache.org/schema/spring/camel-spring.xsd">

  <!-- bridge spring property placeholder with cm -->
  <!-- you must NOT use the <context:property-placeholder at the same time,
  only this bridge bean -->
  <bean id="bridgePropertyPlaceholder"
        class="org.apache.camel.spring.spi.BridgePropertyPlaceholderConfigurer">
    <property name="location" value="/WEB-INF/config.properties"/>
  </bean>


  <bean id="SolrServer"
        class="org.daobs.index.SolrServerBean">
    <property name="solrServerUrl"
              value="${solr.server.url}/${solr.core.data}"/>
    <property name="solrServerUsername" value="${solr.server.user}"/>
    <property name="solrServerPassword" value="${solr.server.password}"/>
  </bean>

  <bean id="SolrRequest"
        class="org.daobs.index.SolrRequestBean"/>

  <bean id="xsltUtility" class="org.daobs.routing.utility.Utility"/>

  <cm:routeContext
    id="harvester.common">

    <cm:route id="route-index">
      <cm:description>
        Index records in Solr and report any errors.
      </cm:description>
      <cm:from uri="direct-vm:indexDocuments"/>

      <!-- From XML response containing ISO19139 records to Solr XML transaction document-->
      <cm:to uri="bean:xsltUtility?method=transform(*, '/xslt/metadata.xsl')"/>
      <!-- Some header may trigger [Fatal Error] :1:1: Premature end of file.
      See https://github.com/INSPIRE-MIF/daobs/issues/90 -->
      <cm:removeHeaders pattern="*"/>

      <!--      <cm:setHeader headerName="transactionFileName">
              <cm:groovy>java.util.UUID.randomUUID().toString() + '.xml'</cm:groovy>
            </cm:setHeader>
            <cm:to uri="file:/tmp/?fileName=solr-request/$simple{header.transactionFileName}&amp;charset=utf-8"/>-->
      <cm:setHeader headerName="Exchange.HTTP_URI">
        <cm:simple>{{solr.server.url}}/{{solr.core.data}}/update</cm:simple>
      </cm:setHeader>
      <cm:setHeader headerName="Content-Type">
        <cm:simple>text/xml</cm:simple>
      </cm:setHeader>
      <cm:to
        uri="http4://solr.server.url?authUsername={{solr.server.user}}&amp;authPassword={{solr.server.password}}&amp;authenticationPreemptive=true&amp;throwExceptionOnFailure=false"/>
      <cm:convertBodyTo type="org.w3c.dom.Document" charset="UTF-8"/>
      <cm:to uri="log:org.daobs.harvester.Harvester?showBody=true"/>
      <cm:choice>
        <cm:when>
          <!-- If records found, next route is direct:cswGetRecords. -->
          <cm:xpath>/response/lst/int[@name = 'status' and text() = '400']
          </cm:xpath>
          <cm:setHeader headerName="indexingError">
            <cm:xpath resultType="java.lang.String">
              /response/lst/str[@name = 'msg']/text()
            </cm:xpath>
          </cm:setHeader>
          <cm:log
            message="Oops, error while indexing record(s) of page #$simple{property.CamelSplitIndex}: $simple{header.indexingError}."
            loggingLevel="ERROR"
            logName="org.daobs.harvester.Harvester"/>
        </cm:when>
        <cm:otherwise>
          <cm:setBody>
            <cm:constant><![CDATA[<commit/>]]></cm:constant>
          </cm:setBody>
          <cm:setHeader headerName="Exchange.HTTP_URI">
            <cm:simple>{{solr.server.url}}/{{solr.core.data}}/update</cm:simple>
          </cm:setHeader>
          <cm:setHeader headerName="Content-Type">
            <cm:simple>text/xml</cm:simple>
          </cm:setHeader>
          <cm:to
            uri="http4://solr.server.url?authUsername={{solr.server.user}}&amp;authPassword={{solr.server.password}}&amp;authenticationPreemptive=true&amp;throwExceptionOnFailure=false"/>

          <cm:setHeader headerName="indexingTime">
            <cm:xpath resultType="java.lang.String">
              /response/lst/int[@name = 'QTime']/text()
            </cm:xpath>
          </cm:setHeader>
          <cm:log message="Records indexed in $simple{header.indexingTime}ms."
                  loggingLevel="INFO"
                  logName="org.daobs.harvester.Harvester"/>
        </cm:otherwise>
      </cm:choice>
    </cm:route>

    <!--<cm:route id="route-delete">
      <cm:description>
        Delete all records from the index.

        TODO: Should only delete record for this harvester only
      </cm:description>
      <cm:from uri="direct:indexDeleteDocuments"/>
      <cm:setHeader headerName="SolrOperation">
        <cm:constant>DELETE_BY_QUERY</cm:constant>
      </cm:setHeader>
      <cm:setBody>
        <cm:simple>{{csw.harvester.delete.filter}}</cm:simple>
      </cm:setBody>
      <cm:to uri="solr://{{solr.server.url}}"/>
    </cm:route>-->


    <!--<cm:route id="websocket-log">
      <cm:from uri="direct:websocketLog"/>
      &lt;!&ndash;<cm:from uri="websocket://harvester"/>&ndash;&gt;
      &lt;!&ndash;<cm:log message=">>> Message received from WebSocket Client : ${body}"/>&ndash;&gt;
      <cm:to uri="websocket://harvester-csw-log?sendToAll=true"/>
    </cm:route>-->
  </cm:routeContext>
</beans>
